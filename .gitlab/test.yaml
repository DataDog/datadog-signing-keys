---
.test_deb:
  stage: test
  tags: [arch:amd64]
  needs:
    - job: trigger-package-promotion-pipeline-testing-stable
      artifacts: false
      optional: true
  before_script:
    - source /root/.bashrc
  script:
    # ensure that apt-get update in test script doesn't fail because of problems with other sources
    - echo "" > /etc/apt/sources.list
    - test/test.sh

# For Debian >= 9/Ubuntu >= 16 where we do additional testing for
# /etc/apt/trusted.gpg.d keyring existence in various scenarios
.test_deb_new_platforms:
  extends: .test_deb
  # Unfortunately parallel/matrix doesn't support expansion,
  # so we have to workaround this clumsily
  # Also, to make it possible to have needs on this job, the values
  # for "DD_LIST" and "OPW_LIST" have to be dd-no-signed and opw-no-signed
  # so that the generated matrix job names would be unique
  parallel:
    matrix:
      - ENSURE_TRUSTED_GPG_D_KEYRING: "true"
      - DD_LIST: "dd-no-signed"
        ENSURE_TRUSTED_GPG_D_KEYRING: "true"
      - OPW_LIST: "opw-no-signed"
        ENSURE_TRUSTED_GPG_D_KEYRING: "true"
      - DD_LIST: "dd-no-signed"
        OPW_LIST: "opw-no-signed"
        ENSURE_TRUSTED_GPG_D_KEYRING: "true"
      - DD_LIST: "dd-signed"
        ENSURE_TRUSTED_GPG_D_KEYRING: "false"
      - OPW_LIST: "opw-signed"
        ENSURE_TRUSTED_GPG_D_KEYRING: "false"
      - DD_LIST: "dd-signed"
        OPW_LIST: "opw-no-signed"
        ENSURE_TRUSTED_GPG_D_KEYRING: "true"
      - DD_LIST: "dd-no-signed"
        OPW_LIST: "opw-signed"
        ENSURE_TRUSTED_GPG_D_KEYRING: "true"
      - DD_LIST: "dd-signed"
        OPW_LIST: "opw-signed"
        ENSURE_TRUSTED_GPG_D_KEYRING: "false"
  before_script:
    - apt-get update
    - if [ "${DD_LIST}" = "dd-signed" ]; then echo "${SOURCE_SIGNED_BY}" > ${DD_LIST_FILE}; elif [ "${DD_LIST}" = "dd-no-signed" ]; then echo "${SOURCE_NO_SIGNED_BY}" > ${DD_LIST_FILE}; fi
    - if [ "${OPW_LIST}" = "opw-signed" ]; then echo "${SOURCE_SIGNED_BY}" > ${OPW_LIST_FILE}; elif [ "${OPW_LIST}" = "opw-no-signed" ]; then echo "${SOURCE_NO_SIGNED_BY}" > ${OPW_LIST_FILE}; fi
    - echo "deb [trusted=yes] http://apttesting.datad0g.com/pipeline-${CI_PIPELINE_ID} stable main" > ${SIGNING_KEYS_FILE}
    - apt-get update
    - apt-get install -y datadog-signing-keys debsig-verify
    - rm -f ${DD_LIST_FILE} ${OPW_LIST_FILE} ${SIGNING_KEYS_FILE}

### Testing notes
# debsig-verify on Debian 7.11/Ubuntu 14.04 requires policy files to have
# Policy xmlns start with "http://", not "https://"; to ensure this works
# fine, we include two policy files per key and we test on Debian 7/Ubuntu 14
# to verify that the package works fine on old Debian systems.
# We also ensure that /etc/apt/trusted.gpg.d/datadog-archive-keyring.gpg
# gets created on Debian 7/Ubuntu 14, since apt in these doesn't respect
# the `[signed-by=...]` modifier in apt source files.
.test_debian_7:
  extends: .test_deb
  image: registry.ddbuild.io/images/mirror/debian:7.11
  variables:
    ENSURE_TRUSTED_GPG_D_KEYRING: "true"
  before_script:
    # Debian 7 sources are already archived + their Release files are expired
    - echo -e "deb http://archive.debian.org/debian wheezy main\ndeb http://archive.debian.org/debian-security wheezy/updates main" > /etc/apt/sources.list
    - apt-get update -o Acquire::Check-Valid-Until=false
    - apt-get install -y --allow-unauthenticated apt-transport-https debsig-verify
    - |
      if [ "${DD_LIST_SIGNED_BY}" = "true" ]; then
        echo "deb [signed-by=${USR_SHARE_KEYRING}] http://apttesting.datad0g.com/pipeline-${CI_PIPELINE_ID} stable main" > ${SIGNING_KEYS_FILE};
      else
        echo "deb [trusted=yes] http://apttesting.datad0g.com/pipeline-${CI_PIPELINE_ID} stable main" > ${SIGNING_KEYS_FILE}
      fi
    - apt-get update -o Acquire::Check-Valid-Until=false
    - apt-get install -y --force-yes datadog-signing-keys
    - rm -f ${DD_LIST_FILE} ${SIGNING_KEYS_FILE}
    # rebuild the apt database after installing the package
    - apt-get install -f

test_debian_7_signed_by:
  extends: .test_debian_7
  variables:
    DD_LIST_SIGNED_BY: "true"

test_debian_7_not_signed_by:
  extends: .test_debian_7

test_debian_10:
  extends: .test_deb_new_platforms
  image: registry.ddbuild.io/images/mirror/debian:10.9

.test_ubuntu_14:
  extends: .test_deb
  image: registry.ddbuild.io/images/mirror/ubuntu:14.04
  variables:
    ENSURE_TRUSTED_GPG_D_KEYRING: "true"
  before_script:
    - apt-get update
    - apt-get install -y debsig-verify
    - |
      if [ "${DD_LIST_SIGNED_BY}" = "true" ]; then
        echo "deb [signed-by=${USR_SHARE_KEYRING}] http://apttesting.datad0g.com/pipeline-${CI_PIPELINE_ID} stable main" > ${SIGNING_KEYS_FILE}
      else
        echo "deb [trusted=yes] http://apttesting.datad0g.com/pipeline-${CI_PIPELINE_ID} stable main" > ${SIGNING_KEYS_FILE}
      fi
    - apt-get update
    - apt-get install -y --force-yes datadog-signing-keys
    - rm -f ${DD_LIST_FILE} ${SIGNING_KEYS_FILE}
    - apt-get install -f

test_ubuntu_14_signed_by:
  extends: .test_ubuntu_14
  variables:
    DD_LIST_SIGNED_BY: "true"

test_ubuntu_14_not_signed_by:
  extends: .test_ubuntu_14

test_ubuntu_18:
  extends: .test_deb_new_platforms
  image: registry.ddbuild.io/images/mirror/ubuntu:18.04
